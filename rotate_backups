#!/bin/bash
# Julius Zaromskis, bspkrs
# Backup rotation (adapted from http://nicaw.wordpress.com/2013/04/18/bash-backup-rotation-script/)

# Storage folder where to move backup files
# Must contain backup.monthly backup.weekly backup.daily folders
target=$3

if [ ! -d ${target} ] ; then
    mkdir ${target}
fi
if [ ! -d ${target}/backup.monthly ]; then
    mkdir ${target}/backup.monthly
fi
if [ ! -d ${target}/backup.weekly ]; then
    mkdir ${target}/backup.weekly
fi
if [ ! -d ${target}/backup.daily ]; then
    mkdir ${target}/backup.daily
fi

# Source folder where files are dumped
source=$2

# Source filename (can be wildcarded)
filename=$1

# Get current month and week day number
month_day=`date +"%d"`
week_day=`date +"%u"`

# Optional check if source files exist. Email if failed.
if [ ! -f ${source}/${filename} ]; then
    ls -l ${source}/ | mail bspkrs@gmail.com -s "[backup script] Daily backup failed! Please check for missing files."
fi

# It is logical to run this script daily. We take files from source folder and move them to
# appropriate destination folder

# On first month day do
if [ "$month_day" -eq 1 ]; then
    destination=${target}/backup.monthly/
else
  # On saturdays do
    if [ "$week_day" -eq 6 ]; then
        destination=${target}/backup.weekly/
    else
    # On any regular day do
        destination=${target}/backup.daily/
    fi
fi

# Move the files
cp ${source}/$filename ${destination}

# daily - keep for 30 days
find ${target}/backup.daily/ -maxdepth 1 -mtime +30 -type d -exec rm -rv {} \;

# weekly - keep for 90 days
find $target/backup.weekly/ -maxdepth 1 -mtime +90 -type d -exec rm -rv {} \;

# monthly - keep for 365 days
find ${target}/backup.monthly/ -maxdepth 1 -mtime +365 -type d -exec rm -rv {} \;

